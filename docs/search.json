[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Add some text and a figure describing myself."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "My professional looking graph of choice is from FiveThirtyEight.com is a scatter of NBA players’ RAPTOR metric from the 2021-2022 season. For context, RAPTOR is an all emcompassing NBA player statistic designed by FiveThirtyEight that was designed to evaluate player performance. I chose to reproduce this plot because I am an NBA fan myself, that perfers to stay updated on the box scores rather than actually watching the games live."
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "library(dslabs)\nlibrary(here)\n\nhere() starts at /Users/jacobmatta/Documents/R/jacobmatta-MADA-portfolio\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to Jacob Matta’s website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "aboutme.html#background",
    "href": "aboutme.html#background",
    "title": "About me",
    "section": "Background",
    "text": "Background\nI am Jacob Matta, a first-year Master of Public Health (MPH) student with a concentration in Biostatistics. I completed my undergraduate degree in Biochemistry and Molecular Biology from the University of Georgia (UGA) during the spring of 2021. I currently work as a Graduate Research Assistant (GRA) in the Economic Evaluation Research Group in the Health Policy and Management Department at UGA."
  },
  {
    "objectID": "aboutme.html#research-interests",
    "href": "aboutme.html#research-interests",
    "title": "About me",
    "section": "Research Interests",
    "text": "Research Interests\nI am interested in engaging in patient-centered research and using quantitative methods to develop clinical outcomes assessments."
  },
  {
    "objectID": "aboutme.html#statistics-programming-and-data-analysis-experience",
    "href": "aboutme.html#statistics-programming-and-data-analysis-experience",
    "title": "About me",
    "section": "Statistics, Programming and Data Analysis Experience",
    "text": "Statistics, Programming and Data Analysis Experience\nLast semester I was introduced to Stata, SAS and R through coursework where I learned basic statistics testing and analysis. As a GRA, I used R Studio and Stata to conduct secondary data analyses of data released by Georgia Department of Public Health."
  },
  {
    "objectID": "aboutme.html#goals-for-mada",
    "href": "aboutme.html#goals-for-mada",
    "title": "About me",
    "section": "Goals for MADA",
    "text": "Goals for MADA\nI am hoping this course helps me develop my skills and understanding of R Studio. Specifically, I would like to build efficient strategies to obtain and clean data, run an appropriate analysis, and then be able to communicate the findings to an audience. In addition, I am eager to learn about programming, machine learning, and other modern approaches to data analysis that are the future."
  },
  {
    "objectID": "aboutme.html#fun-fact",
    "href": "aboutme.html#fun-fact",
    "title": "About me",
    "section": "Fun Fact",
    "text": "Fun Fact\nPrevious to starting the MPH program I was set on attending veterinary school and becoming a veterinarian that specializes in public health. After a semester, my career interest has become more focused to humans but remains in the field of public health."
  },
  {
    "objectID": "aboutme.html#something-to-share",
    "href": "aboutme.html#something-to-share",
    "title": "About me",
    "section": "Something to Share",
    "text": "Something to Share\nhttps://open.spotify.com/episode/5LHMx6BmuaOpLyEOp49Rpy?si=3c45b75711614e6e\nI would like to share a link to an episode of The Peter Attia Drive Podcast, in which the host, Peter Attia, discusses neurodegenerative diseases with a neurologist. At the 1 hour and 24 minute mark of the episode, Peter and his guest discuss that early screenings for hearing loss are important because they believe that hearing loss contributes to nuerodegenerative diseases like Alzheimer’s Disease. If Peter Attia and his guest are correct, then accurate screening strategies are needed to test for hearing loss at earlier stages of life in order to improve prevention of neurodegenerative diseases. This will require new and improved data analysis methods to interpret data correctly and efficiently."
  },
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "coding_exercise.html#section",
    "href": "coding_exercise.html#section",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Deanna Lanier Additions\n\nlibrary(tidyverse)\nlibrary(dslabs)\n\n\n# I think you forgot to add log for population\ndata = gapminder\nafricaData = data [ which(data$continent==\"Africa\"), ]\n# Plot life expectancy as a function of population\nggplot(africaData, aes(x=log(population), y=life_expectancy, col=region)) + geom_point() +xlab(\"Population (log)\")+ ylab(\"Life Expectancy (Years)\")+\n  theme_bw()\n\nWarning: Removed 51 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n#Plot Infant Mortality and Year colored by region \nggplot(africaData, aes(x=year, y=infant_mortality, col=region)) + geom_point() +xlab(\"year\")+ ylab(\"infant_mortality\")+\n  theme_bw()\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n# linear model year and fertility \nlm1=lm(year~infant_mortality, data=africaData)\ntable1=broom::tidy(lm1)%>%\n  knitr::kable(digits=3)\n\ntable1\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n2010.908\n0.552\n3644.523\n0\n\n\ninfant_mortality\n-0.232\n0.005\n-43.997\n0\n\n\n\n\n\n\n#plot population and fertility colored by region\ny2000 = africaData [ which(africaData$year==\"2000\"), ]\nggplot(y2000, aes(x=log(population), y=fertility, col=region)) + geom_point() +xlab(\"Population (log)\")+ ylab(\"Fertility\")+\n  theme_bw()\n\n\n\n\nNo clear relationship between population and fertility observed\nEnd of Deanna Lanier additions"
  },
  {
    "objectID": "dataanalysis-exercise/dataanalysis_exercise.html",
    "href": "dataanalysis-exercise/dataanalysis_exercise.html",
    "title": "R Data Analysis Exercise",
    "section": "",
    "text": "Description of data\nThe data I chose for this exercise is data from the CDC that contains the funds the CDC received from the federal government in a form of five different congressional acts: the Corona virus Preparedness and Response Supplemental Appropriations Act, 2020; Corona virus Aid, Relief, and Economic Security Act; Paycheck Protection Program and Health Care Enhancement Act; Corona virus Response and Relief Supplemental Appropriations Act, 2021; and American Rescue Plan Act of 2021.\n###Loadpackages\n\nlibrary(readr) #for loading csv files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(stats) #used for cleaning \nlibrary(here) #to set paths\n\nhere() starts at /Users/jacobmatta/Documents/R/jacobmatta-MADA-portfolio\n\n\n###Loaddata #note the use of the here() package and not absolute paths #notice here::here is to indicate package::function()\n\ndata_location <- here::here(\"dataanalysis-exercise\", \"data\",\"raw data\",\n                                          \"CDC_COVID_State_Funding.csv\")\nrawdata <- readr::read_csv(data_location)\n\nRows: 2265 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Jurisdiction, Sub-Jurisdiction, Topical Area, Supplemental Act Name...\ndbl (1): Amount\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n###explore the data\n\ndplyr::glimpse(rawdata)\n\nRows: 2,265\nColumns: 6\n$ Jurisdiction            <chr> \"California\", \"District of Columbia\", \"Georgia…\n$ `Sub-Jurisdiction`      <chr> \"Los Angeles County\", NA, NA, NA, NA, NA, NA, …\n$ `Topical Area`          <chr> \"Epi and Lab Capacity\", \"Vaccine Preparedness\"…\n$ `Supplemental Act Name` <chr> \"Paycheck Protection Program and Health Care E…\n$ `Award Name`            <chr> \"ELC Epi & Lab Capacity for HHS\", \"COVID-19 Va…\n$ Amount                  <dbl> 288995531, 518135, 14786285, 2346310, 27696750…\n\nsummary(rawdata)\n\n Jurisdiction       Sub-Jurisdiction   Topical Area       Supplemental Act Name\n Length:2265        Length:2265        Length:2265        Length:2265          \n Class :character   Class :character   Class :character   Class :character     \n Mode  :character   Mode  :character   Mode  :character   Mode  :character     \n                                                                               \n                                                                               \n                                                                               \n  Award Name            Amount         \n Length:2265        Min.   :0.000e+00  \n Class :character   1st Qu.:5.600e+05  \n Mode  :character   Median :2.865e+06  \n                    Mean   :2.626e+07  \n                    3rd Qu.:1.291e+07  \n                    Max.   :1.696e+09  \n\nhead(rawdata)\n\n# A tibble: 6 × 6\n  Jurisdiction         `Sub-Jurisdiction` `Topical Area`  Suppl…¹ Award…² Amount\n  <chr>                <chr>              <chr>           <chr>   <chr>    <dbl>\n1 California           Los Angeles County Epi and Lab Ca… Payche… ELC Ep… 2.89e8\n2 District of Columbia <NA>               Vaccine Prepar… Americ… COVID-… 5.18e5\n3 Georgia              <NA>               Emergency Resp… Corona… Crisis… 1.48e7\n4 Marshall Islands     <NA>               School Testing  Americ… ELC Ep… 2.35e6\n5 Michigan             <NA>               Public Health … Americ… DIS Wo… 2.77e7\n6 Ohio                 <NA>               Emergency Resp… Corona… Crisis… 0     \n# … with abbreviated variable names ¹​`Supplemental Act Name`, ²​`Award Name`\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n2265\n\n\nNumber of columns\n6\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nJurisdiction\n0\n1.00\n4\n20\n0\n63\n0\n\n\nSub-Jurisdiction\n1947\n0.14\n5\n49\n0\n85\n0\n\n\nTopical Area\n0\n1.00\n9\n32\n0\n10\n0\n\n\nSupplemental Act Name\n0\n1.00\n32\n75\n0\n7\n0\n\n\nAward Name\n0\n1.00\n13\n177\n0\n31\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nAmount\n0\n1\n26261038\n92299879\n0\n560000\n2865130\n12914171\n1696424899\n▇▁▁▁▁\n\n\n\n\n\n###cleandata1 #the only variable that appears to have a lot of missing values is Sub-jurisdiction. #I am going to extract the observations that have missing sub-jurisdictions.\n\ndf1 <- stats::na.omit(rawdata)\n\n###cleandata2 #there are some funding amounts that are $0. #I am only interested in funding that is over $0. #to clean this up I will remove all the rows containing $0.\n\ndf2 <- df1 %>% dplyr::filter(Amount != 0)\n\n###cleandata3 #I am only interested in the supplemental act name. #the following code will remove the topical area column and the award name column.\n\ndf3 <- dplyr::select(df2,-c(\"Topical Area\", \"Award Name\"))\n\n###Variables of interest #Interest which Jurisdition has the most funding (amount). #Also curious which supplemental act has the most funding.\n———————————————–Aidan Troha’s Edit——————————————– ####Additional Packages\n\nlibrary(ggplot2)\n\n##selectingdata1 First, we summarise the data based on location (Jurisdiction). Also, we wish to convert the “Amount” column to one that can be easily readable by viewers.We can achieve this by using the “group-by”,“summarise”, and “mutate” functions.\n\ntest1 <- df3 %>%\n      group_by(Jurisdiction) %>%\n      summarise(Funding = sum(Amount)) %>%\n      mutate(`Funding (in Millions)` = Funding/1000000)\n\n##plotting1 We want to show the relationships between the state and the amount of funding received. Since there is such a disparity between the states with the most funding and the states with the least funding, I will only show the states with the highest level of funding.\n\nggplot(mapping=aes(x=Jurisdiction,y=`Funding (in Millions)`)) +\n       geom_col(data=slice_max(test1,order_by=`Funding (in Millions)`,n=5),\n                aes(fill=c(\"red\",\"yellow\",\"green\",\"blue\",\"purple\"))) +\n       ylim(0,max(test1$`Funding (in Millions)`)) +\n       theme(legend.position=\"none\") +\n       labs(title=\"States with the Highest Level of Funding\")\n\n\n\n\n##selectingdata2 As before, we summarise the data, but this time, we group by “Supplemental Act Name”.\n\ntest2 <- df3 %>%\n  group_by(`Supplemental Act Name`) %>%\n  summarise(Funding = sum(Amount)) %>%\n  mutate(`Funding (in Millions)` = Funding/1000000)\n\n##plotting2 We want to show the relationships between the cumulative amount of funding donated by Supplemental Act.\n\nggplot(data=test2,mapping=aes(x=`Supplemental Act Name`,\n                              y=`Funding (in Millions)`)) +\n  geom_col(aes(fill=c(\"red\",\"orange\",\"yellow\",\"green\",\"blue\",\"purple\",\"black\"))) +\n  theme(legend.position=\"none\") +\n  scale_x_discrete(labels=scales::label_wrap(12)) +\n  labs(title=\"Total Funding Awarded by Supplemental Act\")"
  },
  {
    "objectID": "dataanalysis_exercise.html",
    "href": "dataanalysis_exercise.html",
    "title": "R Data Analysis Exercise",
    "section": "",
    "text": "##Description of data\nThe data I chose for this exercise is data from the CDC that contains the funds the CDC received from the federal government in a form of five different congressional acts: the Corona virus Preparedness and Response Supplemental Appropriations Act, 2020; Corona virus Aid, Relief, and Economic Security Act; Paycheck Protection Program and Health Care Enhancement Act; Corona virus Response and Relief Supplemental Appropriations Act, 2021; and American Rescue Plan Act of 2021.\nLoad packages\n\nlibrary(readr) #for loading csv files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(stats) #used for cleaning \nlibrary(here) #to set paths\n\nhere() starts at /Users/jacobmatta/Documents/R/jacobmatta-MADA-portfolio\n\n\nLoad data\n\nNote the use of the here() package and not absolute paths\nNotice here::here is to indicate package::function()\n\n\ndata_location <- here::here(\"dataanalysis-exercise\", \"data\",\"raw data\",\n                                          \"CDC_COVID_State_Funding.csv\")\nrawdata <- readr::read_csv(data_location)\n\nRows: 2265 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Jurisdiction, Sub-Jurisdiction, Topical Area, Supplemental Act Name...\ndbl (1): Amount\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nExplore the Data\n\ndplyr::glimpse(rawdata)\n\nRows: 2,265\nColumns: 6\n$ Jurisdiction            <chr> \"California\", \"District of Columbia\", \"Georgia…\n$ `Sub-Jurisdiction`      <chr> \"Los Angeles County\", NA, NA, NA, NA, NA, NA, …\n$ `Topical Area`          <chr> \"Epi and Lab Capacity\", \"Vaccine Preparedness\"…\n$ `Supplemental Act Name` <chr> \"Paycheck Protection Program and Health Care E…\n$ `Award Name`            <chr> \"ELC Epi & Lab Capacity for HHS\", \"COVID-19 Va…\n$ Amount                  <dbl> 288995531, 518135, 14786285, 2346310, 27696750…\n\nsummary(rawdata)\n\n Jurisdiction       Sub-Jurisdiction   Topical Area       Supplemental Act Name\n Length:2265        Length:2265        Length:2265        Length:2265          \n Class :character   Class :character   Class :character   Class :character     \n Mode  :character   Mode  :character   Mode  :character   Mode  :character     \n                                                                               \n                                                                               \n                                                                               \n  Award Name            Amount         \n Length:2265        Min.   :0.000e+00  \n Class :character   1st Qu.:5.600e+05  \n Mode  :character   Median :2.865e+06  \n                    Mean   :2.626e+07  \n                    3rd Qu.:1.291e+07  \n                    Max.   :1.696e+09  \n\nhead(rawdata)\n\n# A tibble: 6 × 6\n  Jurisdiction         `Sub-Jurisdiction` `Topical Area`  Suppl…¹ Award…² Amount\n  <chr>                <chr>              <chr>           <chr>   <chr>    <dbl>\n1 California           Los Angeles County Epi and Lab Ca… Payche… ELC Ep… 2.89e8\n2 District of Columbia <NA>               Vaccine Prepar… Americ… COVID-… 5.18e5\n3 Georgia              <NA>               Emergency Resp… Corona… Crisis… 1.48e7\n4 Marshall Islands     <NA>               School Testing  Americ… ELC Ep… 2.35e6\n5 Michigan             <NA>               Public Health … Americ… DIS Wo… 2.77e7\n6 Ohio                 <NA>               Emergency Resp… Corona… Crisis… 0     \n# … with abbreviated variable names ¹​`Supplemental Act Name`, ²​`Award Name`\n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n2265\n\n\nNumber of columns\n6\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n5\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nJurisdiction\n0\n1.00\n4\n20\n0\n63\n0\n\n\nSub-Jurisdiction\n1947\n0.14\n5\n49\n0\n85\n0\n\n\nTopical Area\n0\n1.00\n9\n32\n0\n10\n0\n\n\nSupplemental Act Name\n0\n1.00\n32\n75\n0\n7\n0\n\n\nAward Name\n0\n1.00\n13\n177\n0\n31\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nAmount\n0\n1\n26261038\n92299879\n0\n560000\n2865130\n12914171\n1696424899\n▇▁▁▁▁\n\n\n\n\n\nClean Data\n\nthe only variable that appears to have a lot of missing values is Sub-jurisdiction.\nI am going to extract the observations that have missing sub-jurisdictions.\n\n\ndf1 <- stats::na.omit(rawdata)\n\nClean Data Further\n\nThere are some funding amounts that are $0.\nI am only interested in funding that is over $0.\nTo clean this up I will remove all the rows containing $0.\n\n\ndf2 <- df1 %>% dplyr::filter(Amount != 0)\n\nClean Data3 Even Further\n\nI am only interested in the supplemental act name. The following code will remove the topical area column and the award name column.\n\n\ndf3 <- dplyr::select(df2,-c(\"Topical Area\", \"Award Name\"))\n\nVariables of interest\n\nInterested in which Jurisdiction has the most funding (amount).\nAlso curious which supplemental act has the most funding.\n\n———————————————–Aidan Troha’s Edit——————————————– Additional Packages\n\nlibrary(ggplot2)\n\nSelecting Data\n\nFirst, we summarize the data based on location (Jurisdiction).\nAlso, we wish to convert the “Amount” column to one that can be easily readable by viewers.\nWe can achieve this by using the group-by(), summarise(), and mutate() functions.\n\n\ntest1 <- df3 %>%\n      group_by(Jurisdiction) %>%\n      summarise(Funding = sum(Amount)) %>%\n      mutate(`Funding (in Millions)` = Funding/1000000)\n\nPlotting\n\nWe want to show the relationships between the state and the amount of funding received. Since there is such a disparity between the states with the most funding and the states with the least funding, I will only show the states with the highest level of funding.\n\n\nggplot(mapping=aes(x=Jurisdiction,y=`Funding (in Millions)`)) +\n       geom_col(data=slice_max(test1,order_by=`Funding (in Millions)`,n=5),\n                aes(fill=c(\"red\",\"yellow\",\"green\",\"blue\",\"purple\"))) +\n       ylim(0,max(test1$`Funding (in Millions)`)) +\n       theme(legend.position=\"none\") +\n       labs(title=\"States with the Highest Level of Funding\")\n\n\n\n\nSelecting data\n\nAs before, we summarise the data, but this time, we group by “Supplemental Act Name”.\n\n\ntest2 <- df3 %>%\n  group_by(`Supplemental Act Name`) %>%\n  summarise(Funding = sum(Amount)) %>%\n  mutate(`Funding (in Millions)` = Funding/1000000)\n\nPlotting2\n\nWe want to show the relationships between the cumulative amount of funding donated by Supplemental Act.\n\n\nggplot(data=test2,mapping=aes(x=`Supplemental Act Name`,\n                              y=`Funding (in Millions)`)) +\n  geom_col(aes(fill=c(\"red\",\"orange\",\"yellow\",\"green\",\"blue\",\"purple\",\"black\"))) +\n  theme(legend.position=\"none\") +\n  scale_x_discrete(labels=scales::label_wrap(12)) +\n  labs(title=\"Total Funding Awarded by Supplemental Act\")"
  },
  {
    "objectID": "visualization_exercise.html#access-the-professional-graph",
    "href": "visualization_exercise.html#access-the-professional-graph",
    "title": "Visualization Exercise",
    "section": "Access the Professional Graph",
    "text": "Access the Professional Graph\nThe scatter plot can be found at this link. After clicking on the link, scroll down to the scatter plot titled “Where every player in the NBA stands, according to RAPTOR”."
  },
  {
    "objectID": "visualization_exercise.html#adjusting-the-professional-interactive-graph",
    "href": "visualization_exercise.html#adjusting-the-professional-interactive-graph",
    "title": "Visualization Exercise",
    "section": "Adjusting the Professional Interactive Graph",
    "text": "Adjusting the Professional Interactive Graph\nSince this professional scatter plot I will be recreating is interactive, I will adjust it to visualize players in the 2021-2022 NBA Season who played 1040 minutes or more. Follow the directions below to do so.\n\nScroll down to the scatter plot titled “Where every player in the NBA stands, according to RAPTOR” if you haven’t already\nAdjust the interactive graph by selecting the ‘21-22’ and deselecting ‘22-23’ in the options titles “CHOOSE SEASON(S)”.\nChange the “MINIMUM MINUTES PLAYED” option to 1200 minutes\n\nYou should now have an interactive graph that looks like this:"
  },
  {
    "objectID": "visualization_exercise.html#attempt-at-reproduction",
    "href": "visualization_exercise.html#attempt-at-reproduction",
    "title": "Visualization Exercise",
    "section": "Attempt at Reproduction",
    "text": "Attempt at Reproduction\nLoading packages\n\nlibrary(here) #to set paths\n\nhere() starts at /Users/jacobmatta/Documents/R/jacobmatta-MADA-portfolio\n\nlibrary(readr) #for loading csv files\nlibrary(ggplot2)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n\nLoading the data\n\ndata_location <- here::here(\"data\",\"raptor_by_nba_player.csv\")\nrawdata <- readr::read_csv(data_location)\n\nRows: 4685 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): player_name, player_id\ndbl (19): season, poss, mp, raptor_box_offense, raptor_box_defense, raptor_b...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nExamining data\n\nhead(rawdata)\n\n# A tibble: 6 × 21\n  player_name playe…¹ season  poss    mp rapto…² rapto…³ rapto…⁴ rapto…⁵ rapto…⁶\n  <chr>       <chr>    <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 Alex Abrin… abrina…   2017  2387  1135   0.746  -0.373   0.373  -0.419 -3.86  \n2 Alex Abrin… abrina…   2018  2546  1244   0.318  -1.73   -1.41   -1.29  -0.0497\n3 Alex Abrin… abrina…   2019  1279   588  -3.22    1.08   -2.14   -6.16   4.90  \n4 Precious A… achiup…   2021  1581   749  -4.12    1.36   -2.76   -4.05  -0.920 \n5 Precious A… achiup…   2022  3802  1892  -2.52    1.76   -0.758  -1.69   3.10  \n6 Quincy Acy  acyqu01   2014  1716   847  -1.72    0.133  -1.58   -0.325 -1.66  \n# … with 11 more variables: raptor_onoff_total <dbl>, raptor_offense <dbl>,\n#   raptor_defense <dbl>, raptor_total <dbl>, war_total <dbl>,\n#   war_reg_season <dbl>, war_playoffs <dbl>, predator_offense <dbl>,\n#   predator_defense <dbl>, predator_total <dbl>, pace_impact <dbl>, and\n#   abbreviated variable names ¹​player_id, ²​raptor_box_offense,\n#   ³​raptor_box_defense, ⁴​raptor_box_total, ⁵​raptor_onoff_offense,\n#   ⁶​raptor_onoff_defense\n\nstr(rawdata) #used to see how data is structured \n\nspc_tbl_ [4,685 × 21] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ player_name         : chr [1:4685] \"Alex Abrines\" \"Alex Abrines\" \"Alex Abrines\" \"Precious Achiuwa\" ...\n $ player_id           : chr [1:4685] \"abrinal01\" \"abrinal01\" \"abrinal01\" \"achiupr01\" ...\n $ season              : num [1:4685] 2017 2018 2019 2021 2022 ...\n $ poss                : num [1:4685] 2387 2546 1279 1581 3802 ...\n $ mp                  : num [1:4685] 1135 1244 588 749 1892 ...\n $ raptor_box_offense  : num [1:4685] 0.746 0.318 -3.216 -4.123 -2.522 ...\n $ raptor_box_defense  : num [1:4685] -0.373 -1.725 1.078 1.359 1.764 ...\n $ raptor_box_total    : num [1:4685] 0.373 -1.408 -2.137 -2.764 -0.758 ...\n $ raptor_onoff_offense: num [1:4685] -0.419 -1.292 -6.159 -4.051 -1.688 ...\n $ raptor_onoff_defense: num [1:4685] -3.857 -0.0497 4.9012 -0.9197 3.1034 ...\n $ raptor_onoff_total  : num [1:4685] -4.28 -1.34 -1.26 -4.97 1.42 ...\n $ raptor_offense      : num [1:4685] 0.5434 -0.0208 -4.0402 -4.3476 -2.5174 ...\n $ raptor_defense      : num [1:4685] -1.145 -1.503 1.886 0.955 2.144 ...\n $ raptor_total        : num [1:4685] -0.601 -1.523 -2.155 -3.393 -0.373 ...\n $ war_total           : num [1:4685] 1.249 0.777 0.178 -0.246 2.263 ...\n $ war_reg_season      : num [1:4685] 1.448 0.466 0.178 -0.247 2.31 ...\n $ war_playoffs        : num [1:4685] -0.1987 0.311392 0 0.000721 -0.046953 ...\n $ predator_offense    : num [1:4685] 0.0771 -0.1746 -4.5777 -3.8177 -2.484 ...\n $ predator_defense    : num [1:4685] -1.039 -1.113 1.543 0.475 2.024 ...\n $ predator_total      : num [1:4685] -0.962 -1.287 -3.034 -3.343 -0.46 ...\n $ pace_impact         : num [1:4685] 0.326 -0.456 -0.268 0.329 -0.729 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   player_name = col_character(),\n  ..   player_id = col_character(),\n  ..   season = col_double(),\n  ..   poss = col_double(),\n  ..   mp = col_double(),\n  ..   raptor_box_offense = col_double(),\n  ..   raptor_box_defense = col_double(),\n  ..   raptor_box_total = col_double(),\n  ..   raptor_onoff_offense = col_double(),\n  ..   raptor_onoff_defense = col_double(),\n  ..   raptor_onoff_total = col_double(),\n  ..   raptor_offense = col_double(),\n  ..   raptor_defense = col_double(),\n  ..   raptor_total = col_double(),\n  ..   war_total = col_double(),\n  ..   war_reg_season = col_double(),\n  ..   war_playoffs = col_double(),\n  ..   predator_offense = col_double(),\n  ..   predator_defense = col_double(),\n  ..   predator_total = col_double(),\n  ..   pace_impact = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nOnly interested in player raptor stats in the 2022 season, so I will extract all the observations of the 2022 season\n\n#extracting only players in the 2022 season \nrawdata_2022 <- rawdata[rawdata$season == '2022', ]\n\nExamining extracted data\n\nhead(rawdata_2022)\n\n# A tibble: 6 × 21\n  player_name playe…¹ season  poss    mp rapto…² rapto…³ rapto…⁴ rapto…⁵ rapto…⁶\n  <chr>       <chr>    <dbl> <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n1 Precious A… achiup…   2022  3802  1892  -2.52     1.76  -0.758   -1.69   3.10 \n2 Steven Ada… adamss…   2022  4392  2113   0.471    1.35   1.82     6.29  -3.17 \n3 Bam Adebayo adebab…   2022  4893  2439  -0.399    3.72   3.32     1.78   3.48 \n4 Santi Alda… aldams…   2022   763   360  -2.58    -2.42  -5.00    -2.71   1.16 \n5 LaMarcus A… aldril…   2022  2205  1050  -0.516    2.25   1.73     1.09  -0.462\n6 Nickeil Al… alexan…   2022  3037  1471  -1.50    -1.21  -2.71    -2.40  -0.957\n# … with 11 more variables: raptor_onoff_total <dbl>, raptor_offense <dbl>,\n#   raptor_defense <dbl>, raptor_total <dbl>, war_total <dbl>,\n#   war_reg_season <dbl>, war_playoffs <dbl>, predator_offense <dbl>,\n#   predator_defense <dbl>, predator_total <dbl>, pace_impact <dbl>, and\n#   abbreviated variable names ¹​player_id, ²​raptor_box_offense,\n#   ³​raptor_box_defense, ⁴​raptor_box_total, ⁵​raptor_onoff_offense,\n#   ⁶​raptor_onoff_defense\n\nstr(rawdata_2022) #used to see how data is structured \n\ntibble [606 × 21] (S3: tbl_df/tbl/data.frame)\n $ player_name         : chr [1:606] \"Precious Achiuwa\" \"Steven Adams\" \"Bam Adebayo\" \"Santi Aldama\" ...\n $ player_id           : chr [1:606] \"achiupr01\" \"adamsst01\" \"adebaba01\" \"aldamsa01\" ...\n $ season              : num [1:606] 2022 2022 2022 2022 2022 ...\n $ poss                : num [1:606] 3802 4392 4893 763 2205 ...\n $ mp                  : num [1:606] 1892 2113 2439 360 1050 ...\n $ raptor_box_offense  : num [1:606] -2.522 0.471 -0.399 -2.582 -0.516 ...\n $ raptor_box_defense  : num [1:606] 1.76 1.35 3.72 -2.42 2.25 ...\n $ raptor_box_total    : num [1:606] -0.758 1.82 3.322 -5.001 1.73 ...\n $ raptor_onoff_offense: num [1:606] -1.69 6.29 1.78 -2.71 1.09 ...\n $ raptor_onoff_defense: num [1:606] 3.103 -3.165 3.481 1.163 -0.462 ...\n $ raptor_onoff_total  : num [1:606] 1.416 3.126 5.257 -1.55 0.631 ...\n $ raptor_offense      : num [1:606] -2.51737 1.68548 0.00708 -2.80948 -0.24116 ...\n $ raptor_defense      : num [1:606] 2.14 0.45 3.85 -1.87 1.83 ...\n $ raptor_total        : num [1:606] -0.373 2.136 3.855 -4.675 1.59 ...\n $ war_total           : num [1:606] 2.263 5.264 8.275 -0.355 2.32 ...\n $ war_reg_season      : num [1:606] 2.31 5.141 6.103 -0.355 2.32 ...\n $ war_playoffs        : num [1:606] -0.047 0.123 2.173 0 0 ...\n $ predator_offense    : num [1:606] -2.484 1.373 0.305 -1.644 0.291 ...\n $ predator_defense    : num [1:606] 2.024 1.526 3.41 -2.281 0.845 ...\n $ predator_total      : num [1:606] -0.46 2.9 3.72 -3.92 1.14 ...\n $ pace_impact         : num [1:606] -0.729 -0.242 -0.118 0.358 -0.226 ...\n\n\nI am only interested in plotting players during the 2021-2022 Season who have played 1042 minutes or more\n\n#Extracting players from teh 2022 season \nrawdata_2022 <- rawdata[rawdata$season == '2022', ]\n\n#Extracting players that have played 1200 minutes or more \nclean_data <- rawdata_2022[rawdata_2022$mp > 1200,]\n\nUsing ggplot2 to replicate the data plot produced by FiveThirtyEight that gives a visual of the RAPTOR metric of NBA players who played 1042 minutes of more during the 2021-2022 season\n\n#using the clean data set to produce the background to the scatter plot\ng1 <- \n  ggplot(clean_data, aes(x=raptor_offense, y=raptor_defense)) +\n  geom_rect(aes(xmin=-10,xmax=0,ymin=-10,ymax=0),fill=\"pink\",alpha=0.01) +\n  geom_rect(aes(xmin=0,xmax=10,ymin=0,ymax=10),fill='turquoise',alpha=0.01) +\n  labs(x = \"Offensive RAPTOR rating\", y = \"Defensive RAPTOR rating\")+ coord_fixed(ratio=1, xlim=c(-10,10),ylim=c(-10,10))\n\ng1\n\n\n\n\n\n#adding data points that have been shaped and colored to match the FiveThirtyEight plot#\ng2 <- g1 + geom_point(shape = 21, colour = \"black\", fill = \"white\", size = 4, stroke = 1 ) + xlim(-10,10) + ylim(-10,10)\ng2\n\n\n\n\n\n#Adding annoations to the background\ng3 <- g2 + theme(panel.grid.minor = element_blank()) +  \n  \n  annotate(geom=\"label\", x=-9,y=10,label=\"- offensive\", fill=\"pink\") +\n  annotate(geom=\"label\", x=-9,y=8,label=\"+ defensive\", fill='turquoise') +\n  annotate(geom=\"label\", x=-9,y=-10,label=\"- defensive\", fill='pink') +\n  annotate(geom=\"label\", x=-9,y=-8,label=\"- offensive\", fill='pink') + \n  annotate(geom=\"label\", x=9,y=10,label=\"+ offensive\", fill='turquoise') +\n  annotate(geom=\"label\", x=9,y=8,label=\"+ defensive\", fill='turquoise') +\n  annotate(geom=\"label\", x=9,y=-8,label=\"+ offensive\", fill='turquoise') +\n  annotate(geom=\"label\", x=9,y=-10,label=\"- defensive\", fill='pink')\ng3"
  },
  {
    "objectID": "visualization_exercise.html#reflection",
    "href": "visualization_exercise.html#reflection",
    "title": "Visualization Exercise",
    "section": "Reflection",
    "text": "Reflection\nThe overall process was pretty fun and pushed me to explore the capabilities of ggplot2 functions. I would give myself a solid 85/100 for the end result. The colors of my plot do not exactly match the colors used in the FiveThirtyEight plot. Also, I struggled to make my plot interactive using ggplotly. When I attempted to use ggplotly, the background of my plot was lost. I am sure there is a simple solution to this that I will look into in the near future. Below is an example of using the ggplotly function and the background of the scatter plot disappearing. In addition, I would like to figure out how to edit the interactive dots on the scatter plot to present the player name when selected on.\n\nggplotly(g3)\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues\n\nWarning in geom2trace.default(dots[[1L]][[1L]], dots[[2L]][[1L]], dots[[3L]][[1L]]): geom_GeomLabel() has yet to be implemented in plotly.\n  If you'd like to see this geom implemented,\n  Please open an issue with your example code at\n  https://github.com/ropensci/plotly/issues"
  },
  {
    "objectID": "visualization_exercise.html#key-resources",
    "href": "visualization_exercise.html#key-resources",
    "title": "Visualization Exercise",
    "section": "Key Resources",
    "text": "Key Resources\n\nFor editing scatter plot dot shapes and colors, and for editing grid lines I turned to https://ggplot2.tidyverse.org\nColoring different areas of the background I used https://statisticsglobe.com/draw-ggplot2-plot-different-background-colors-region-r"
  }
]